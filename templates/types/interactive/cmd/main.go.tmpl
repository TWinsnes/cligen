package cmd

import (
	"context"
	"fmt"
	"os"

	"github.com/urfave/cli/v3"
	"github.com/charmbracelet/huh"
)

func Run() {
	app := &cli.Command{
		Name:    "{{.AppName}} ",
		Usage:   "Generate a new Go CLI app scaffold powered by urfave/cli",
		Version: "0.1.0",
		// This add automated shell completion to the cli, see https://cli.urfave.org/v3/examples/completions/shell-completions/ for details
		EnableShellCompletion: true,
		Commands: []*cli.Command{
			newCmd(),
		},
	}

	if err := app.Run(context.Background(), os.Args); err != nil {
		_, _ = fmt.Fprintln(os.Stderr, err)
		os.Exit(1)
	}
}

func newCmd() *cli.Command {
	return &cli.Command{
		Name:      "hello",
		Usage:     "Greet the world",
		Action: func(c context.Context, cmd *cli.Command) error {
		    name, err := promptForName()
		    if err != nil {
		        return err
		    }
			fmt.Printf("Hello %s\n", name)
			return nil
		},
	}
}

func promptForName() (string, error) {
	var name string
	form := huh.NewForm(
		huh.NewGroup(
			huh.NewInput().
				Title("What is your name?").
				Value(&name),
		),
	)
	err := form.Run()
	if err != nil {
		return "", err
	}
	return name, nil
}